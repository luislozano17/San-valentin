const noBtn = document.getElementById("noBtn");
const yesBtn = document.getElementById("yesBtn");
const noImage = document.getElementById("noImage");
const heartsContainer = document.getElementById("hearts-container");
const questionText = document.getElementById("questionText"); // Elemento del texto de la pregunta

let noResponses = [
    "Â¿EstÃ¡s seguro que no?",
    "Â¿De verdad no?",
    "Te lo estoy preguntando en serio.",
    "Â¿NingÃºn interÃ©s?",
    "Pero, Â¿seguro que no?",
    "Â¡Vamos, di que sÃ­!",
    "Â¿Tan rÃ¡pido un no?",
    "No me hagas sentir mal..."
];

let noImages = [
    "Materiales/1.gif",
    "Materiales/2.gif",
    "Materiales/3.gif",
    "Materiales/4.gif",
    "Materiales/5.gif",
    "Materiales/6.gif"
];

let noCounter = 0;
let yesBtnSize = 1; // TamaÃ±o inicial del botÃ³n "SÃ­"

noBtn.addEventListener("click", () => {
    if (noBtn.disabled) return; // Si estÃ¡ deshabilitado, no hace nada

    // Si llegamos al final de las imÃ¡genes, reiniciar
    if (noCounter >= noImages.length) {
        noCounter = 0;
    }

    // Cambiar el texto del botÃ³n "No"
    noBtn.textContent = noResponses[noCounter];

    // Cambiar la imagen
    noImage.src = noImages[noCounter];

    // Incrementar el contador para la siguiente frase e imagen
    noCounter++;

    // Aumentar el tamaÃ±o del botÃ³n "SÃ­"
    yesBtnSize += 0.2;
    yesBtn.style.transform = `scale(${yesBtnSize})`;
});

yesBtn.addEventListener("click", () => {
    // Cambiar el texto cuando se presiona "SÃ­"
    questionText.textContent = "Â¡Yo sabÃ­a que dirÃ­as que sÃ­! ðŸ’–";

    // Cambiar la imagen cuando se presiona 'SÃ­'
    noImage.src = "Materiales/7.gif";

    // Deshabilitar el botÃ³n "No" para que no se pueda seguir presionando
    noBtn.disabled = true;
    noBtn.style.opacity = "0.5"; // Opcional: hacer que el botÃ³n parezca desactivado

    // Generar corazones de manera continua
    setInterval(() => {
        let heart = document.createElement("div");
        heart.classList.add("heart");
        heart.innerHTML = "ðŸ’—"; // CorazÃ³n rosado

        // PosiciÃ³n aleatoria en ambas direcciones
        heart.style.left = Math.random() * 100 + "vw";
        heart.style.top = Math.random() * -100 + "px";

        // DuraciÃ³n aleatoria para el efecto
        heart.style.animationDuration = (Math.random() * 2 + 3) + "s"; 

        heartsContainer.appendChild(heart);

        // Eliminar el corazÃ³n despuÃ©s de la animaciÃ³n
        setTimeout(() => {
            heart.remove();
        }, 4000);
    }, 300);
});
